@echo off
REM Learn-X Dynamic Tunnel Setup
REM This script updates environment variables and redeploys automatically

echo üîÑ Learn-X Dynamic Tunnel Setup
echo =================================

echo üöÄ Starting backend server...
start "Backend Server" cmd /k "cd /d %~dp0backend && npm start"

echo ‚è≥ Waiting for backend to start...
timeout /t 5 /nobreak >nul

echo üåê Creating Cloudflare tunnel...
for /f "tokens=*" %%i in ('cloudflared tunnel --url http://localhost:5000 2^>^&1 ^| findstr "https://"') do (
    set TUNNEL_URL=%%i
    echo Found tunnel URL: %%i
)

if not defined TUNNEL_URL (
    echo ‚ùå Failed to get tunnel URL
    pause
    exit /b 1
)

echo üìù Updating environment files...
REM Update frontend .env.production
powershell -Command "(Get-Content frontend\.env.production) -replace 'NEXT_PUBLIC_API_URL=.*', 'NEXT_PUBLIC_API_URL=%TUNNEL_URL%' | Set-Content frontend\.env.production"
powershell -Command "(Get-Content frontend\.env.production) -replace 'NEXT_PUBLIC_SOCKET_URL=.*', 'NEXT_PUBLIC_SOCKET_URL=%TUNNEL_URL%' | Set-Content frontend\.env.production"

REM Update vercel.json
powershell -Command "(Get-Content vercel.json) -replace 'NEXT_PUBLIC_API_URL.*: \".*\"', 'NEXT_PUBLIC_API_URL\": \"%TUNNEL_URL%\"' | Set-Content vercel.json"

echo üöÄ Deploying to Vercel...
cd frontend
vercel --prod

echo ‚úÖ Setup complete!
echo üìç Tunnel URL: %TUNNEL_URL%
echo üìç Keep this script running to maintain the tunnel

pause